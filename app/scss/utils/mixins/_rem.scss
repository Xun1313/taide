/**
*
* rem
*
**/
// @include font-size(13px);
@mixin font-size($target) {
    font-size: $target;
    font-size: calc($target / $font-size) * 1rem;
}

// @include remCalc(width,45);
// @include remCalc(margin,2,5,2,5);
@mixin remCalc($property, $values) {
    $base-font-size: 13px;
    $px-values: ();
    $rem-values: ();

    @each $value in $values {
        @if $value ==0 or $value ==0px {
            // 0 -- use it without a unit
            $px-values: join($px-values, 0);
            $rem-values: join($rem-values, 0);
        }

        @else if type-of($value)==number and not unitless($value) and (unit($value)==px) {
            // px value given - calculate rem value from base-font-size
            $new-rem-value: $value / $base-font-size;
            $px-values: join($px-values, round($value));
            $rem-values: join($rem-values, #{$new-rem-value}rem);
        }

        @else {
            // unitless value - use those directly as rem and calculate the px-fallback
            $px-values: join($px-values, round($value * $base-font-size));
            $rem-values: join($rem-values, #{$value}rem);
        }
    }

    #{$property}: $px-values;
    #{$property}: $rem-values;
}